datasource db {
  provider          = "postgres"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Categories of clothes
enum UpperBodyWinter {
  Jackets
  Coats
  Mufflers
  Caps
  FullSleeveTShirts
  FullSleeveShirts
}

enum UpperBodySummer {
  HalfSleeveTShirts
  HalfSleeveShirts
  CutSleeveTShirts
}

enum LowerBody {
  Jeans
  Shorts
  Pants
}

enum UpperBody {
  UpperBodySummer
  UpperBodyWinter
}

enum Category {
  UpperBody
  LowerBody
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  photoUrl String
  address  String @unique
  closet   NFT[]
}

model Seller {
  id       String    @id @default(uuid())
  name     String
  photoUrl String
  about    String
  products Product[]
  NFT      NFT[]
}

enum ProductStatus {
  purchased_not_delivered
  purchased_delivered
  not_purchased
}

enum Crypto {
  matic
  ether
}

enum PurchaseMethod {
  Card
  Cash
  Crypto
}

enum Chain {
  matic
  eth
}

model Product {
  id       String         @id @default(uuid())
  name     String
  NFTs     NFT[]
  nFTId    String
  category Category
  stock    Int
  method   PurchaseMethod @default(Cash)
  chain    Chain          @default(matic)
  price    Int
  status   ProductStatus  @default(not_purchased)
  Seller   Seller?        @relation(fields: [sellerId], references: [id])
  sellerId String?
}

enum NFTStatus {
  purchased_and_not_revealed // Product purchased, NFT not revealed
  purchased_and_revealed // Product purchased, NFT revealed
  not_purchased // Product not purchased
}

model NFT {
  id        String    @id @default(uuid())
  tokenId   Int
  status    NFTStatus @default(not_purchased)
  image     String
  desc      String
  traits    Json[]
  Seller    Seller?   @relation(fields: [sellerId], references: [id])
  sellerId  String?
  User     User?    @relation(fields: [UserId], references: [id])
  UserId   String?
  productId String
  Product   Product   @relation(fields: [productId], references: [id])
}
